// SOLVE THIS:
Using let or const, declare a global variable named myGlobal outside of any function. Initialize it with a value of 10.
Inside function fun1, assign 5 to oopsGlobal without using the let or const keywords.
// Declare the myGlobal variable below this line

function fun1() {
  // Assign 5 to oopsGlobal Here

}

// Only change code above this line

function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}



// SOLUTION BELOW THIS LINE:
/* In JavaScript, scope refers to the visibility of variables.
Variables which are defined outside of a function block have Global scope. 
This means, they can be seen everywhere in your JavaScript code. */

function fun1() {
  oopsGlobal = 5;
}

let myGlobal = 10;
function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}




